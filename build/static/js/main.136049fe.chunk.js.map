{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","_ref","searchfield","searchChange","React","createElement","className","type","placeholder","onChange","Card","name","email","id","alt","src","concat","CardList","robots","cardComponent","map","user","i","key","App","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_inherits","_createClass","_this2","fetch","then","response","json","users","_this3","filteredRobot","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yNAsBeA,EApBG,SAAHC,GAAgBA,EAAXC,YAA8B,IAAlBC,EAAYF,EAAZE,aAE5B,OAEIC,IAAAC,cAAA,OAAKC,UAAU,OAETF,IAAAC,cAAA,SACAC,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUN,MCSTO,EAjBF,SAAHT,GAAwB,IAAnBU,EAAIV,EAAJU,KAAKC,EAAKX,EAALW,MAAQX,EAAFY,GAEtB,OAEIT,IAAAC,cAAA,OAAKC,UAAU,yCAEXF,IAAAC,cAAA,OAAKS,IAAI,SAASC,IAAG,wBAAAC,OAA0BL,EAAI,cACnDP,IAAAC,cAAA,WACID,IAAAC,cAAA,UACKM,GAELP,IAAAC,cAAA,SAAIO,MCULK,EArBE,SAAHhB,GAAiB,IAAZiB,EAAMjB,EAANiB,OAETC,EAAgBD,EAAOE,IAAI,SAACC,EAAMC,GACpC,OACKlB,IAAAC,cAACK,EAAI,CACFa,IAAKD,EACLT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,UAK7B,OACIR,IAAAC,cAAA,WACKc,ICoCEK,SAhDN,SAAAC,GACL,SAAAD,IAAa,IAAAE,EAMR,OANQC,YAAAC,KAAAJ,IACTE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,QAmBJI,eAAiB,SAACC,GACdP,EAAKQ,SAAS,CAAChC,YAAe+B,EAAME,OAAOC,SAnB3CV,EAAKW,MAAQ,CACTnB,OAAQ,GACRhB,YAAa,IAEhBwB,EAsCJ,OA7CIY,YAAAd,EAAAC,GAQJc,YAAAf,EAAA,EAAAD,IAAA,oBAAAa,MAAA,WAEkB,IAAAI,EAAAZ,KACfa,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SACzBF,KAAK,SAAAG,GAAK,OAAIL,EAAKN,SAAS,CAAChB,OAAO2B,QAI7C,CAAAtB,IAAA,SAAAa,MAAA,WAYO,IAAAU,EAAAlB,KAEEmB,EAAgBnB,KAAKS,MAAMnB,OAAO8B,OAAO,SAAA9B,GAC3C,OAAOA,EAAOP,KAAKsC,cAAcC,SAASJ,EAAKT,MAAMnC,YAAY+C,iBAKrE,OACI7C,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,gBACnBF,IAAAC,cAACL,EAAS,CAACG,aAAcyB,KAAKI,iBAC9B5B,IAAAC,cAACY,EAAQ,CAACC,OAAQ6B,SAI7BvB,EA7CI,CAASpB,IAAM+C,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAd,KAAAa,EAAAE,KAAA,UAAqBf,KAAK,SAAAzC,GAAiD,IAA9CyD,EAAMzD,EAANyD,OAAQC,EAAM1D,EAAN0D,OAAQC,EAAM3D,EAAN2D,OAAQC,EAAM5D,EAAN4D,OAAQC,EAAO7D,EAAP6D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCEDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/D,IAAAC,cAACD,IAAMgE,WAAU,KACfhE,IAAAC,cAACmB,EAAG,QAOR4B","file":"static/js/main.136049fe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SearchBox = ({searchfield,searchChange}) => {\n\n    return(\n\n        <div className=\"pa2\">\n            \n              <input \n              className=\"pa3 ba b--green bg-lightest-blue\"\n              type='search' \n              placeholder=\"search robots\"\n              onChange={searchChange}\n              \n              />\n\n              \n        </div>\n    );\n}\n\n\nexport default SearchBox;","import React from 'react';\n\n\n//Create a card\nconst Card = ({name,email,id}) => {\n    //This is JSX and not html\n    return (\n       \n        <div className='tc bg-light-blue dib br3 pa3 ma2 grow'>\n     \n            <img alt='robots' src={`https://robohash.org/${name}?200x200`}></img>\n            <div>\n                <h2>\n                    {name}\n                </h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n\n","import React from \"react\";\nimport Card from \"./Card\";\n\n\nconst CardList = ({robots}) => {\n\n    const cardComponent = robots.map((user, i )=> {\n        return (\n             <Card \n                key={i} \n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email}\n                />\n            \n            )\n    });\n    return (\n        <div>\n            {cardComponent}\n        </div>\n   \n    )\n}\n\nexport default CardList;","import React from \"react\";\nimport SearchBox from '../components/SearchBox'\nimport CardList from \"../components/CardList\";\n\nimport './App.css';\n\n\nclass App extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''        \n            \n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json()\n            ).then(users => this.setState({robots:users}))\n\n\n       \n    }\n\n\n\n    onSearchChange = (event) => {\n        this.setState({\"searchfield\": event.target.value})\n      \n     \n    }\n    \n\n\n    render(){\n\n        const filteredRobot = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());  \n            \n        })\n  \n    \n        return ( \n            <div className=\"tc\">\n                <h1 className=\"f1\">Robo Friends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <CardList robots={filteredRobot} />\n                \n            </div>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App.js';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; //for style\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}